/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 avatar.glb -t 
*/

import * as THREE from '../../node_modules/@types/three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Wolf3D_Hair: THREE.Mesh
    Wolf3D_Body: THREE.Mesh
    Wolf3D_Outfit_Bottom: THREE.Mesh
    Wolf3D_Outfit_Footwear: THREE.Mesh
    Wolf3D_Outfit_Top: THREE.Mesh
    EyeLeft: THREE.Mesh
    EyeRight: THREE.Mesh
    Wolf3D_Head: THREE.Mesh
    Wolf3D_Teeth: THREE.Mesh
  }
  materials: {
    ['Wolf3D_Hair.001']: THREE.MeshStandardMaterial
    ['Wolf3D_Body.001']: THREE.MeshStandardMaterial
    ['Wolf3D_Outfit_Bottom.001']: THREE.MeshStandardMaterial
    ['Wolf3D_Outfit_Footwear.001']: THREE.MeshStandardMaterial
    ['Wolf3D_Outfit_Top.001']: THREE.MeshStandardMaterial
    ['Wolf3D_Eye.001']: THREE.MeshStandardMaterial
    ['Wolf3D_Skin.001']: THREE.MeshStandardMaterial
    ['Wolf3D_Teeth.001']: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Avatar(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('models/avatar.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Wolf3D_Hair.geometry} material={materials['Wolf3D_Hair.001']} />
      <mesh geometry={nodes.Wolf3D_Body.geometry} material={materials['Wolf3D_Body.001']} />
      <mesh geometry={nodes.Wolf3D_Outfit_Bottom.geometry} material={materials['Wolf3D_Outfit_Bottom.001']} />
      <mesh geometry={nodes.Wolf3D_Outfit_Footwear.geometry} material={materials['Wolf3D_Outfit_Footwear.001']} />
      <mesh geometry={nodes.Wolf3D_Outfit_Top.geometry} material={materials['Wolf3D_Outfit_Top.001']} />
      <mesh geometry={nodes.EyeLeft.geometry} material={materials['Wolf3D_Eye.001']} />
      <mesh geometry={nodes.EyeRight.geometry} material={materials['Wolf3D_Eye.001']} />
      <mesh geometry={nodes.Wolf3D_Head.geometry} material={materials['Wolf3D_Skin.001']} />
      <mesh geometry={nodes.Wolf3D_Teeth.geometry} material={materials['Wolf3D_Teeth.001']} />
    </group>
  )
}

useGLTF.preload('models/avatar.glb')
